name: Release tagging Workflow
"on":
  push:
    branches:
      - "release/*"

jobs:
  release_tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Tag it
        run: |
          # Get the tag of the previous commit
          previous_tag=$(git tag --points-at $(git rev-parse HEAD~1))

          # If the tag is empty, then get the branch name
          if [ -z "$previous_tag" ]; then
            previous_tag=$(git rev-parse --abbrev-ref HEAD)
          fi

          # Extract the version parts
          IFS='.' read -ra version_parts <<< "$previous_tag"

          # For each part, remove characters that are not digits
          for i in "${!version_parts[@]}"; do
            version_parts[$i]=$(echo "${version_parts[$i]}" | tr -cd '[:digit:]')
          done

          # If the last part is empty then set it to 0, otherwise increment it
          if [ -z "${version_parts[3]}" ]; then
            version_parts[3]=0
          else 
            # Increment the last part
            ((version_parts[3]++))
          fi

          # Create the new version
          release_tag="release/${version_parts[0]}.${version_parts[1]}.${version_parts[2]}.${version_parts[3]}"

          echo "New tag: $release_tag"

          # Create the new tag
          git tag "$release_tag"

          # Push the new tag to git
          git push origin "$release_tag"

          # Create variant version (MM.mm.pp.b)
          double_zeros=00
          temp_major="$double_zeros${version_parts[0]}"
          major="${temp_major:(-2)}"
          temp_minor="$double_zeros${version_parts[1]}"
          minor="${temp_minor:(-2)}"
          temp_patch="$double_zeros${version_parts[2]}"
          patch="${temp_patch:(-2)}"
          variant_version="$major.$minor.$patch.${version_parts[3]}"

          echo "New variant version: $variant_version"
