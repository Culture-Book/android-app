plugins {
    id "com.android.application"
    id "org.jetbrains.kotlin.android"
    id "com.google.gms.google-services"
    id "com.google.firebase.crashlytics"
}

def localProperties = new Properties()
try {
    localProperties.load(new FileInputStream(rootProject.file("local.properties")))
} catch (Exception ignored) {
}
def mapsKey = System.getenv("MAPS_API_KEY") ?: localProperties["MAPS_API_KEY"]

android {
    signingConfigs {
        pre_release {
            storeFile file("./pre_release.keystore")
            storePassword System.getenv("PRE_RELEASE_PASS")
            keyAlias System.getenv("PRE_RELEASE_ALIAS")
            keyPassword System.getenv("PRE_RELEASE_PASS")
        }
        release {
            storeFile file("./release.keystore")
            storePassword System.getenv("RELEASE_PASS")
            keyAlias System.getenv("RELEASE_ALIAS")
            keyPassword System.getenv("RELEASE_PASS")
        }
    }
    namespace "$app_id"
    compileSdk "$target_sdk".toInteger()

    defaultConfig {
        applicationId "uk.co.culturebook"
        minSdk "$min_sdk".toInteger()
        targetSdk "$target_sdk".toInteger()
        versionCode version_code
        versionName "Culturebook v${majorRelease}.${minorRelease}.${buildNumber}"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-DEBUG"
            minifyEnabled false
            resValue "string", "MAPS_API_KEY", "$mapsKey"
        }
        pre_release_debug {
            applicationIdSuffix ".pre_release"
            versionNameSuffix "-PRE_RELEASE"
            debuggable true
            signingConfig signingConfigs.pre_release
            minifyEnabled true
            matchingFallbacks = ["pre_release"]
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
            resValue "string", "MAPS_API_KEY", "$mapsKey"
        }
        pre_release {
            applicationIdSuffix ".pre_release"
            versionNameSuffix "-PRE_RELEASE"
            signingConfig signingConfigs.pre_release
            minifyEnabled true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
            resValue "string", "MAPS_API_KEY", "$mapsKey"
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
            resValue "string", "MAPS_API_KEY", "$mapsKey"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_compiler_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation project(":app:core:ui")
    implementation project(":app:core:data")
    implementation project(":app:core:nav")
    implementation project(":app:features:auth")
    implementation project(":app:features:home")
    implementation project(":app:features:add_new")

    implementation 'androidx.core:core-splashscreen:1.0.0'
    implementation "androidx.core:core-ktx:1.9.0"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.5.1"
    implementation "androidx.activity:activity-compose:1.6.1"
}